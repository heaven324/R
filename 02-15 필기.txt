setwd("c:\\R")

source('C:/R/start.R', local=TRUE, echo=TRUE,  encoding = 'UTF-8')


■ 어제 배웠던 내용 복습

	1. R을 왜 배워야 하는지?
	2. R 기본 문법 
		- R로 데이터 검색하는 방법
		- R에서의 연산자
		- R에서의 함수
			(1) 문자 함수
			(2) 숫자 함수
			(3) 날짜 함수  ◀───  여기까지 함
				   SQL			vs		R
				- add_months			     difftime
				- months_between		     사용자 정의 함수
				- last_day			     사용자 정의 함수
				- next_day			     사용자 정의 함수

			(4) 변환 함수
			(5) 일반 함수




★ R로 next_day 함수 만들기 


문제 40. 오라클에 접속해서 오늘부터 돌아오는 월요일의 날짜를 SQL로 출력하시오 !

	SQL> select next_day(sysdate, '월요일') from dual;

	next_day <- function(x, day) {
	    for (y in 1:7 ) {
	        check_date = as.Date(x+days(y))
	        if (format(check_date, '%A') == day) {
	            print(check_date)
	            }
	        }
	    }
	next_day(Sys.Date(), '월요일')

	[1] "2019-02-18"








★ 변환함수
		SQL		vs		R
	      to_char			   as.character ───▶ 문자로 형변환
	      to_number			   as.integer   ───▶ 숫자로 형변환
	      to_date			   as.Date      ───▶ 날짜로 형변환
					   as.Factor    ───▶ factor형으로 변환하는 함수 

					   format 함수
						%Y ─▶ 년도
						%m ─▶ 달
						%d ─▶ 일
						%A ─▶ 요일




문제 41. 이름, 입사한 요일을 출력하시오 !

	data.table( emp$ename, format(as.Date(emp$hiredate), '%A'))
	
	        V1     V2
	 1:  SMITH 수요일
	 2:  ALLEN 금요일
	 3:   WARD 일요일
	 4:  JONES 목요일
	 5: MARTIN 월요일
	 6:  BLAKE 금요일
	 7:  CLARK 화요일
	 8:  SCOTT 일요일
	 9:   KING 화요일
	10: TURNER 화요일
	11:  ADAMS 토요일
	12:  JAMES 목요일
	13:   FORD 목요일
	14: MILLER 토요일
	15:   JACK 토요일




문제 42. 내가 무슨 요일에 태어났는지 출력하시오 !

	format(as.Date('1993-03-02'), "%A")
	
	[1] "화요일"






문제 43. add_months 함수를 R에서 생성하시오 !

	SQL> select add_months(syadate, 100)
		from dual;

	add_months <- function(x, mon) {
	    print(x + months(mon))
	}
	add_months(Sys.Date(), 100)

	[1] "2027-06-15"






문제 44. 이름, 월급, 등급을 출력하는데 월급이 1500 이상이면 등급을 A로 출력하고 아니면 B로 출력하시오 !

	data.table( emp$ename, emp$sal, ifelse(emp$sal>=1500, "A", "B"))







문제 45. 이름, 월급, 등급을 출력하는데 월급이 3000이상이면 A를 출력하고 월급이 1500이상이고 3000보다 
	 작으면 B를 출력하고 나머지 사원들은 C를 출력하시오 !

	data.table( emp$ename, emp$sal, ifelse(emp$sal>=3000, "A", 
	                                       ifelse(emp$sal>=1500, "b", "C")))





문제 47. 이름과 커미션을 출력하는데 커미션이 NA인 사원들은 no comm으로 출력되게 하시오 !

	SQL> select ename, nvl(to_char(comm), 'no comm') from emp;
	
	data.table(emp$ename, ifelse(is.na(emp$comm), "no comm", emp$comm))
	
	        V1      V2
	 1:  SMITH no comm
	 2:  ALLEN     300
	 3:   WARD     500
	 4:  JONES no comm
	 5: MARTIN    1400
	 6:  BLAKE no comm
	 7:  CLARK no comm
	 8:  SCOTT no comm
	 9:   KING no comm
	10: TURNER       0
	11:  ADAMS no comm
	12:  JAMES no comm
	13:   FORD no comm
	14: MILLER no comm
	15:   JACK no comm










■ R에서의 그룹 함수

		Oracle		vs		R
		1. max				max
		2. min				min
		3. sum				sum
		4. avg				mean
		5. count			length (가로)
						table  (세로)





문제 48. 최대 월급을 출력하시오 !

	max(emp$sal)
	
	[1] 5000






문제 49. 직업이 SALESMAN인 사원들 중에서 최대 월급을 출력하시오 !

	x <- emp[emp$job == "SALESMAN", c("sal")]
	max(x)

	[1] 1600






문제 50. 직업과 직업별 최대월급을 출력하시오 !

	SQL> select job, max(sal)
		from emp
		group by job;

	aggregate(sal~job, emp, max)
	
	        job  sal
	1   ANALYST 3000
	2     CLERK 3200
	3   MANAGER 2975
	4 PRESIDENT 5000
	5  SALESMAN 1600




문제 51. 부서번호, 부서번호별 최소 월급을 출력하시오 !

	aggregate(sal~deptno, emp, min)

	  deptno  sal
	1     10 1300
	2     20  800
	3     30  950
	4     70 3200




문제 52. 부서번호, 직업, 토탈월급을 출력하시오 !

	SQL> select deptno, job, sum(sal)
		from emp
		group by deptno, job;

	aggregate(sal~deptno+job, emp, sum)

	   deptno       job  sal
	1      20   ANALYST 6000
	2      10     CLERK 1300
	3      20     CLERK 1900
	4      30     CLERK  950
	5      70     CLERK 3200
	6      10   MANAGER 2450
	7      20   MANAGER 2975
	8      30   MANAGER 2850
	9      10 PRESIDENT 5000
	10     30  SALESMAN 5600





문제 53. 부서번호, 부서번호별 최대월급을 출력하는데 부서번호별 최대월급이 높은것부터 출력하시오 !

	orderBy(~-sal, aggregate(sal~deptno, emp, max))
	
	  deptno  sal
	1     10 5000
	4     70 3200
	2     20 3000
	3     30 2850





문제 54. 위의 컬럼명을 한글로 부서번호, 토탈월급으로 변경하시오 !

	x <- orderBy(~-sal, aggregate(sal~deptno, emp, max))
	names(x) <- c("부서번호", " 토탈월급")
	x
	
	  부서번호  토탈월급
	1       10      5000
	4       70      3200
	2       20      3000
	3       30      2850






문제 55. 직업과 직업별 인원수를 출력하시오 !

	#세로로 출력
	aggregate(empno~job, emp, length)
	
	        job empno
	1   ANALYST     2
	2     CLERK     5
	3   MANAGER     3
	4 PRESIDENT     1
	5  SALESMAN     4
	
	#가로로 출력
	table(emp$job)
	
	  ANALYST     CLERK   MANAGER PRESIDENT  SALESMAN 
	        2         5         3         1         4 




문제 56. 위의 결과를 막대 그래프로 그리시오 !

	x <- table(emp$job)
	barplot(x, main="직업별 인원수", col=rainbow(5), density=50)
	




문제 57. 직업, 직업별 평균월급을 출력하시오 !

	#세로:
	aggregate(sal~job, emp, mean)

	        job      sal
	1   ANALYST 3000.000
	2     CLERK 1470.000
	3   MANAGER 2758.333
	4 PRESIDENT 5000.000
	5  SALESMAN 1400.000
	
	#가로:
	tapply(emp$sal, emp$job, mean)

	  ANALYST     CLERK   MANAGER PRESIDENT  SALESMAN 
	 3000.000  1470.000  2758.333  5000.000  1400.000




문제 58. 위의 결과를 다시 출력하는데 소숫점 이하는 안나오게 하시오 !

	#세로 : 
	x <- aggregate(sal~job, emp, mean)
	data.table(직업 = x$job, 평균월급 = trunc(x$sal))
	
	        직업 평균월급
	1:   ANALYST     3000
	2:     CLERK     1470
	3:   MANAGER     2758
	4: PRESIDENT     5000
	5:  SALESMAN     1400
	
	#가로 :
	x2 <- tapply(emp$sal, emp$job, mean)
	
	trunc(x2)
	  ANALYST     CLERK   MANAGER PRESIDENT  SALESMAN 
	     3000      1470      2758      5000      1400 





문제 59. 입사한 년도, 입사한 년도별 평균월급을 가로로 출력하시오 !

	#답1 :
	x <- data.table(입사년도 = substr(emp$hiredate, 1, 4), 월급=emp$sal)
	tapply(x$월급, x$입사년도, mean)
	
	  1980   1981   1982   1987 
	 800.0 2282.5 2250.0 2050.0 
	
	#답2 : 
	x <- data.table(입사년도 = year(emp$hiredate), 월급=emp$sal)
	tapply(x$월급, x$입사년도, mean)
	
	  1980   1981   1982   1987 
	 800.0 2282.5 2250.0 2050.0 





문제 60. 위의 결과를 막대 그래프로 그리시오 !

	x <- data.table(입사년도 = year(emp$hiredate), 월급=emp$sal)
	x1 <- tapply(x$월급, x$입사년도, mean)
	barplot(x1, main="년도별 평균월급", col=rainbow(5), density=50)





문제 61. 직업, 부서번호, 직업별 부서번호별 토탈월급을 출력하시오 !

	tapply(emp$sal, list(emp$job, emp$deptno), sum)
	
	            10   20   30   70
	ANALYST     NA 6000   NA   NA
	CLERK     1300 1900  950 3200
	MANAGER   2450 2975 2850   NA
	PRESIDENT 5000   NA   NA   NA
	SALESMAN    NA   NA 5600   NA




문제 62. 위의 결과중에 NA를 0으로 출력되게 하시오 !

	x <- tapply(emp$sal, list(emp$job, emp$deptno), sum)
	x[is.na(x)] <- 0
	x
	
	            10   20   30   70
	ANALYST      0 6000    0    0
	CLERK     1300 1900  950 3200
	MANAGER   2450 2975 2850    0
	PRESIDENT 5000    0    0    0
	SALESMAN     0    0 5600    0




문제63. 직업, 입사년도(4자리)

	t_a <- tapply(sal, list( year(hiredate), job), sum)
	t_a[is.na(t_a)] <- 0
	t_a

	     ANALYST CLERK MANAGER PRESIDENT SALESMAN
	1980       0   800       0         0        0
	1981    3000   950    8275      5000     5600
	1982       0  4500       0         0        0
	1987    3000  1100       0         0        0





문제64. 위의 결과에서 column name과 row name을 각각 출력

	colnames(t_a)
	[1] "ANALYST"   "CLERK"     "MANAGER"   "PRESIDENT" "SALESMAN" 

	rownames(t_a)
	[1] "1980" "1981" "1982" "1987"





문제65. 문제64번의 결과를 막대그래프로 시각화

	barplot(t_a, col=rainbow(7), legend=rownames(x), beside=T)




문제 66. 직업, 직업별 토탈월급을 원형 ( pie )그래프로 그리시오 !

	t_a <- tapply(emp$sal, emp$job, sum)
	pie(x, col=rainbow(5), density=80)




문제 67. 위의 그래프를 3D로 출력하시오 !

	install.packages("plotrix")
	library(plotrix)
	pie3D(t_a, explode=0.1, labels=rownames(x))





문제 68. 문제 67번 시각화 결과 옆 즉 직업 옆에 비율도 같이 출력되게 하시오 !

	x <- tapply(emp$sal, emp$job, sum)
	x2 <- aggregate(sal~job, emp, sum)
	pct <- round(x2$sal/sum(emp$sal)*100,1)
	pct
	lbls <- x2$job
	lbls
	lbls2 <- paste(lbls, ":", pct, '%')
	lbls2
	pie3D(x, explode=0.1, labels=lbls2)




문제 69. crime_loc.csv를 가지고 범죄유형이 살인인 장소와 건수를 출력하시오 !

crime_loc[crime_loc$범죄=="살인", c("장소", "건수")]

            장소 건수
82        아파트  242
83            집  312
84      고속도로    1
85          노상  280
86          상점   23
87      시장노점    5
88      숙박업소   43
89          병원   87
90        사무실   40
91          공장   15
92        공사장    4
93          창고    4
94      역대합실    8
95        지하철    1
96          교통    9
97  유흥접객업소    1
98        유원지   13
99          학교    8
100     금융기관    0
101     의료기관   19
102     종교기관    2
103         산야    8
104         해상    2
105         부대    1
106     구금장소    0
107         공지    3
108         기타  131





문제 70. 위의 결과를 x5변수에 담고 아래의 결과로 3D원형그래프를 그리시오 !

	x5 <- crime_loc[crime_loc$범죄=="살인", c("장소", "건수")]
	x6 <- tapply(x5$건수, x5$장소, sum)
	barplot(x6, col=rainbow(14))





문제 72. tapply함수를 이용해서 전통시장과 대형마트간의 물품별 가격 평균을 출력하시오 !

	x <- round(tapply(price$A_PRICE, list(price$A_NAME, price$M_TYPE_NAME), mean))
	x[is.na(x)] <- 0
	x

	                      대형마트 전통시장
	고등어                    3313     3000
	고등어(30cm,국산)         5020     3140
	고등어(30cm,수입산)       3980        0
	고등어(냉동,국산)         3873     3415
	고등어(냉동,수입산)       2430     2500





문제 73. 위의 결과를 다시 출력하는데 가격이 높은것부터 출력되게 하는데 대형마트를 기준으로 출력되게 하시오 !

	orderBy(~-대형마트, x)
	
	                      대형마트 전통시장
	쇠고기(육우,불고기)      23400    15142
	쇠고기(한우,불고기)      22338    17774
	쇠고기                   20280        0
	쇠고기(한우1등급)        19779    19800
	쇠고기(한우2등급)        18500    15640
	돼지고기(생삼겹살)       11331     9705










■ R로 조인하는 방법

		오라클		vs		R
	      equi join
	     non equi join			merge
	      outer join
	       self join




문제 74. dept.csv를 내려받아 dept라는 변수에 로드하고 이름과 월급과 부서위치를 출력하시오 !

	dept <- read.csv("dept.csv", header=T)
	x <- merge(emp, dept, by = "deptno")
	x[, c("ename", "sal", "loc")]
	
	    ename  sal      loc
	1    KING 5000 NEW YORK
	2  MILLER 1300 NEW YORK
	3   CLARK 2450 NEW YORK
	4   SMITH  800   DALLAS
	5   JONES 2975   DALLAS
	6    FORD 3000   DALLAS
	7   ADAMS 1100   DALLAS
	8   SCOTT 3000   DALLAS
	9   ALLEN 1600  CHICAGO
	10  BLAKE 2850  CHICAGO
	11 MARTIN 1250  CHICAGO
	12 TURNER 1500  CHICAGO
	13   WARD 1250  CHICAGO
	14  JAMES  950  CHICAGO





문제 75. 부서위치가 DALLAS인 사원들의 이름과 월급과 부서위치를 출력하시오 !

	x[x$loc=='DALLAS', c("ename", "sal", "loc")]
	  ename  sal    loc
	4 SMITH  800 DALLAS
	5 JONES 2975 DALLAS
	6  FORD 3000 DALLAS
	7 ADAMS 1100 DALLAS
	8 SCOTT 3000 DALLAS




문제 76. 커미션이 NA인 사원들의 이름과 부서위치와 커미션을 출력하시오 !

	x[is.na(x$comm), c("ename", "loc", "comm")]

	    ename      loc comm
	1    KING NEW YORK   NA
	2  MILLER NEW YORK   NA
	3   CLARK NEW YORK   NA
	4   SMITH   DALLAS   NA
	5   JONES   DALLAS   NA
	6    FORD   DALLAS   NA
	7   ADAMS   DALLAS   NA
	8   SCOTT   DALLAS   NA
	10  BLAKE  CHICAGO   NA
	14  JAMES  CHICAGO   NA




문제 77. 이름과 부서위치를 출력하는데 오라클의 outer join과 같은 결과를 출력하시오 ! 

	SQL> select e.ename, d.loc
		from emp e dept d
		where e.deptno (+) = d.deptno;
	
	x <- merge(emp, dept, by="deptno", all.y=T)
	x[, c("ename", "loc")]
	
	    ename      loc
	1    KING NEW YORK
	2  MILLER NEW YORK
	3   CLARK NEW YORK
	4   SMITH   DALLAS
	5   JONES   DALLAS
	6    FORD   DALLAS
	7   ADAMS   DALLAS
	8   SCOTT   DALLAS
	9   ALLEN  CHICAGO
	10  BLAKE  CHICAGO
	11 MARTIN  CHICAGO
	12 TURNER  CHICAGO
	13   WARD  CHICAGO
	14  JAMES  CHICAGO
	15   <NA>   BOSTON




문제 78. 아래의 SQL의 결과를 R로 구현하시오 !

	SQL> select e.ename, d.loc
		from emp e full outer join dept d
		on ( e.deptno = d.deptno );
	
	x <- merge(emp, dept, by="deptno", all=T)
	x[, c("ename", "loc")
	
	    ename      loc
	1    KING NEW YORK
	2  MILLER NEW YORK
	3   CLARK NEW YORK
	4   SMITH   DALLAS
	5   JONES   DALLAS
	6    FORD   DALLAS
	7   ADAMS   DALLAS
	8   SCOTT   DALLAS
	9   ALLEN  CHICAGO
	10  BLAKE  CHICAGO
	11 MARTIN  CHICAGO
	12 TURNER  CHICAGO
	13   WARD  CHICAGO
	14  JAMES  CHICAGO
	15   <NA>   BOSTON
	16   JACK     <NA>





문제 79. 이름 자기의 직속상사의 이름(관리자)을 출력하시오 !

	SQL> select e.ename, m,ename
		from emp e, emp m
		whrere e.mgr = m.empno;
	
	x <- merge(emp, emp, by.x='mgr', by.y='empno')
	x
	data.table(ename=x$ename.x, mgr=x$ename.y)
	
	     ename   mgr
	 1:  SCOTT JONES
	 2:   FORD JONES
	 3:  ALLEN BLAKE
	 4:   WARD BLAKE
	 5:  JAMES BLAKE
	 6: TURNER BLAKE
	 7: MARTIN BLAKE
	 8: MILLER CLARK
	 9:   JACK CLARK
	10:  ADAMS SCOTT
	11:  CLARK  KING
	12:  JONES  KING
	13:  BLAKE  KING
	14:  SMITH  FORD




문제 80. 위의 결과를 다시 출력하는데 관리자보다 더 많은 월급을 받는 사원들의 이름과 월급을 출력하시오 !

	x <- merge(emp, emp, by.x='mgr', by.y='empno')
	x[x$sal.x >= x$sal.y, c("ename.x", "sal.x")]
	
	  ename.x sal.x
	1   SCOTT  3000
	2    FORD  3000
	9    JACK  3200




문제 81. 위의 결과 데이터인 사원이름과 직속상사의 이름을 출력하는 데이터를 가지고 아래와 같이 시각화 하시오 !
	 (사원테이블의 조직도를 그리시오 !)

	install.packages("igraph")
	library(igraph)
	x <- merge(emp, emp, by.x='mgr', by.y='empno')
	a <- x[, c("ename.x", "ename.y")]
	b <- graph.data.frame(a,directed=F)
	plot(b)




문제 82. 위의 그래프를 구글의 googleVis를 이용해서 emp테이블의 관계도를 시각화 하시오 !

	install.packages("googleVis")
	library(googleVis)
	a <- merge(emp,emp, by.x="empno",by.y="mgr", all.y=T)
	org <- gvisOrgChart(a, idvar="ename.y",parentvar="ename.x",
	                    options=list(width=600, height=250, size='middle',allowCollapse=T))
	plot(org)





문제 83. 부서위치, 부서위치별 토탈월급을 출력하시오 !

	x <- merge(emp, dept, by="deptno")
	tapply(x$sal, x$loc, sum)

	  BOSTON  CHICAGO   DALLAS NEW YORK 
	      NA     9400    10875     8750 





문제 84. 위의 결과를 막대 그래프로 시각화 하시오 !

	x1[is.na(x1)] <- 0
	barplot(x1, col=rainbow(5))









■ 팩터(factor) 자료형이란?

	- 범주(값의 목록)을 갖는 vector
	- 종류가 2가지 인데
		1. nominal ─▶  level의 순서의 값이 무의미 하다.
		 		 (알파벳 순서로 정의)
		2. ordinal ─▶  level의 순서의 값을 직접 정의해서 원하는 순서로 정의 할 수 있다.

	# 예제 :
		a <- c("middle", "low", "high")
		str(a)
		
		b <- factor(a)
		str(b)
		
		c <- factor(a, order=TRUE, level = c("low", "middle", "high"))
		str(c)
		
		max(c)
		min(c)
		c[order(c,decreasing = F)]




install.packages("plotrix")
install.packages("igraph")
install.packages("googleVis")