■ R 수업  

 * R 수업 일정

  1. R 기본 문법을 익히는 수업 (1주일)
        - R 을 배워야하는 이유
        - R 의 자료구조
        - R 의 연산자
        - R 의 함수 
        - R 에서의 조인
        - R 에서의 서브쿼리 
        - R 에서의 그래프 
        - R 에서의 if 문과 loop 문 사용법 

  2. R 을 활용한 머신러닝 (2주일)

        - 머신러닝의 종류 3가지
            1. 지도학습 :
                  분류 : 의사결정트리, 신경망, 
                         서포트 백터 머신, 나이브 베이즈,
                         knn 
                  회귀 : 선형회귀 
            2. 비지도 학습 : K-means 
            3. 강화학습     

  3. 통계수업 (오전 통계 수업, 오후 포트폴리오 제작)
         - 데이터의 종류 
         - 데이터 수치 요약 
         - 확률과 확률변수 
         - 확률과 표본분포
         - 통계적 추정 
         - 통계적 가설검정 

  R 포트폴리오 --->  개별로 만들어도 되고 그룹으로 만들어도 된다. 

	  데이터 분석가 와                      딥러닝 연구원 
	     ↓                                     ↓
	  R , python , 기본 통계지식 필수 사항    python, 딥러닝
	    
	    포트폴리오                             포트폴리오 







■  R 을 배워야하는 이유

	 " 데이터 분석가 모집요망에 SQL 과 R , Python 은 필수이다 "
	
	 카카오톡이 2010년 3월에 서비스를 시작한 이후 폭발적으로 성장해서 2012년 말에 8000 만명의 
	 가입자를 넘어 섰다.
	  
	 하루 평균 43분간 카카오톡을 하고 하루 방문자가 2700만명, 하루 최대 메세지 이용건수가 42억건에 달함.

	 문자해 ---> 카톡해
	
	 이런 성공에도 불구하고 마땅한 수익모델이 없어서
	
	 2010년 41억 적자 
	 2011년 153억 적자 
	
	         <------ 카톡 사용자들에 대한 data분석이 있음 다음
	                 부터 
	 2012년에 애니팡의 인기에 힘입어 흑자라인으로 들어섰다.
	 개발자 통장에 하루 1억씩 입금 
	 
	 중간에 카톡 사용자들을 어떻게 분석 
	
	 1. 누가(성별,연령)
	 2. 무엇을(게임 아이템)
	 3. 언제 ( 아이템 구매시간)
	 4. 얼마나 (아이템 구매빈도)
	 5. 어떻게 (결제 방법)







■ R 설치 

	  - 기본 R 프로그램
	
	  - R studio  <--- SQL gate, spider, pycham 와 같은툴 













■ 작업 디렉토리 변경 및 emp.csv 로드하는 방법

	* 작업 디렉토리 변경

		> setwd("c:\\R")
		> emp <- read.csv("emp.csv", header=T)
		>
		> emp
		   empno  ename       job  mgr   hiredate  sal comm deptno
		1   7369  SMITH     CLERK 7902 1980-12-17  800   NA     20
		2   7499  ALLEN  SALESMAN 7698 1981-02-20 1600  300     30
		3   7521   WARD  SALESMAN 7698 1981-02-22 1250  500     30
		4   7566  JONES   MANAGER 7839 1981-04-02 2975   NA     20
		5   7654 MARTIN  SALESMAN 7698 1981-09-28 1250 1400     30
		6   7698  BLAKE   MANAGER 7839 1981-05-01 2850   NA     30
		7   7782  CLARK   MANAGER 7839 1981-06-09 2450   NA     10
		8   7788  SCOTT   ANALYST 7566 1987-04-19 3000   NA     20
		9   7839   KING PRESIDENT   NA 1981-11-17 5000   NA     10
		10  7844 TURNER  SALESMAN 7698 1981-09-08 1500    0     30
		11  7876  ADAMS     CLERK 7788 1987-05-23 1100   NA     20
		12  7900  JAMES     CLERK 7698 1981-12-03  950   NA     30
		13  7902   FORD   ANALYST 7566 1981-12-03 3000   NA     20
		14  7934 MILLER     CLERK 7782 1982-01-23 1300   NA     10
		15  9292   JACK     CLERK 7782 1982-01-23 3200   NA     70










■ SQL과 R의 차이 ?

	"아주 긴 SQL코드를 R 코드로는 단순하게 작성할 수 있다."

	SQL> select deptno, sum(decode(job, 'SALESMAN', sal, 0 ) ),
			    sum(decode(job, 'ANALYST', sal, 0 ) )
		from emp
		group by deptno;

	R> attach(emp)
	R> tapply(sal, list(deptno, job), sum)
	    ANALYST CLERK MANAGER PRESIDENT SALESMAN
	 10      NA  1300    2450      5000       NA
	 20    6000  1900    2975        NA       NA
	 30      NA   950    2850        NA     5600
	 70      NA  3200      NA        NA       NA

		"데이터를 시각화할 수 있다."

	R> pie(emp$sal, col=rainbow(14))











■ R이란 무엇인가?

	뉴질랜드의 aukland대학의 robert gentlman과 Ross ihaka가 1995년에 개발한 소프트웨어이고 데이터
	분석을 위한 통계 및 그래픽스를 지원하는 무료 소프트웨어이다.











■ R을 왜 사용해야 하는가?

	1. R is ★free★
	2. data 분석을 위해서 가장 많이 쓰는 통계 플랫폼
	3. 복잡한 데이터를 다양한 그래프로 표현할 수 있다.
	4. 분석을 위한 데이터를 쉽게 저장하고 조작할 수 있다.
	5. 누구든지 ★유용한 패키지★를 생성해서 공유할 수 있고, 새로운 기능에 대한 전달이 빠르다.
	6. 어떠한 OS에서도 설치가 가능하다. (심지어 아이폰에서도 설치가 가능하다.)












■ R의 자료구조
	그림 1

	1. vector : 같은 데이터 타입을 갖는 1차원 배열구조
	2. matrix : 같은 데이터 타입을 갖는 2차원 배열구조
	3. array  : 같은 데이터 타입을 갖는 다차원 배열구조
	4. data.frame : 각각의 데이터 타입을 갖는 컬럼으로 이루어진 2차원 배열구조
			(rdbms의 테이블과 유사함)

		예 : 오라클 	vs	 R
		     desc emp 		str(emp)

		> str(emp)
		'data.frame':   15 obs. of  8 variables:
		 $ empno   : int  7369 7499 7521 7566 7654 7698 7782 7788 7839 7844 ...
		 $ ename   : Factor w/ 15 levels "ADAMS","ALLEN",..: 13 2 15 8 10 3 4 12 9 14 ...
		 $ job     : Factor w/ 5 levels "ANALYST","CLERK",..: 2 5 5 3 5 3 3 1 4 5 ...
		 $ mgr     : int  7902 7698 7698 7839 7698 7839 7839 7566 NA 7698 ...
		 $ hiredate: Factor w/ 13 levels "1980-12-17","1981-02-20",..: 1 2 3 4 8 5 6 12 9 7 ...
		 $ sal     : int  800 1600 1250 2975 1250 2850 2450 3000 5000 1500 ...
		 $ comm    : int  NA 300 500 NA 1400 NA NA NA NA 0 ...
		 $ deptno  : int  20 30 30 20 30 30 10 20 10 30 ...

	5. list : 서로다른 데이터 구조(vector, data frame, matrix, array)인 데이터 타입이 중첩된 구조










■ 기본 데이터 검색


문제 1. emp 데이터 프레임에서 이름과 월급을 출력하시오 !

	emp[, c("ename", "sal")]

	    ename  sal
	1   SMITH  800
	2   ALLEN 1600
	3    WARD 1250
	4   JONES 2975
	5  MARTIN 1250
	6   BLAKE 2850
	7   CLARK 2450
	8   SCOTT 3000
	9    KING 5000
	10 TURNER 1500
	11  ADAMS 1100
	12  JAMES  950
	13   FORD 3000
	14 MILLER 1300
	15   JACK 3200





문제 2. 월급이 3000인 사원들의 이름과 월급을 출력하시오 !

	> emp[emp$sal == 3000, c("ename", "sal")]
	   ename  sal
	8  SCOTT 3000
	13  FORD 3000

	> attach(emp)
	> emp[sal == 3000, c("ename", "sal")]
	   ename  sal
	8  SCOTT 3000
	13  FORD 3000




문제 3. 월급이 2000 이상인 사원들의 이름과 월급을 출력하시오 !

	emp[sal >= 2000, c("ename", "sal")]
	
	   ename  sal
	4  JONES 2975
	6  BLAKE 2850
	7  CLARK 2450
	8  SCOTT 3000
	9   KING 5000
	13  FORD 3000
	15  JACK 3200











■ R에서 사용하는 연산자 총정리

	1. 산술연산자 : * / + -
	2. 비교연산자 : >, <, >=, <=, ==, !=
	3, 논리연산자 : &  : and (벡터화된 연산)
			&& : amd (벡터화되지 않은 연산)
			 | : or  (벡터화된 연산)
			|| : or  (벡터화되지 않은 연산)
			 ! : not

	※ 벡터화된 연산 vs 벡터화되지 않은 연산
		예 : 
			x <- c(1,2,3)
			x > c(1,1,1) & x < c(3,3,3)

			x <- 1
			x > -2 && x < 2





문제 4. 직업이 SALESMAN이 아닌 사원들의 이름과 월급과 직업을 출력하시오 !

	emp[job != 'SALESMAN', c("sal", "job")]

	    sal       job
	1   800     CLERK
	4  2975   MANAGER
	6  2850   MANAGER
	7  2450   MANAGER
	8  3000   ANALYST
	9  5000 PRESIDENT
	11 1100     CLERK
	12  950     CLERK
	13 3000   ANALYST
	14 1300     CLERK
	15 3200     CLERK





문제 5. 직업이 SALESMAN이고 월급이 1000 이상인 사원들의 이름과 월급과 직업을 출력하시오 !

	emp[job == "SALESMAN" & sal >= 1000, c("ename", "job")]
	
	    ename      job
	2   ALLEN SALESMAN
	3    WARD SALESMAN
	5  MARTIN SALESMAN
	10 TURNER SALESMAN









■ R shiny 설치

	install.packages("shiny")
	library(shiny)
	runExample("01_hello")
	runExample("02_text")
	runExample("03_reactivity")
	runExample("04_mpg")	
	runExample("05_sliders")
	runExample("06_tabsets")
	runExample("07_widgets")
	runExample("08_html")
	runExample("09_upload")
	runExample("10_download")
	runExample("11_timer")

	전기수 누가 만든 Shinycode 실행해보기




문제 6. 아래와 같이 결과를 출력하시오 !

	 SQL> select ename || " 의 직업은 " || job
	        from emp;
	
	paste(emp$ename, "의 직업은 ", emp$job)
	
	install.packages("data.table")
	library(data.table)
	data.table(paste(emp$ename, "의 직업은 ", emp$job))

	                            V1
	 1:     SMITH 의 직업은  CLERK
	 2:  ALLEN 의 직업은  SALESMAN
	 3:   WARD 의 직업은  SALESMAN
	 4:   JONES 의 직업은  MANAGER
	 5: MARTIN 의 직업은  SALESMAN
	 6:   BLAKE 의 직업은  MANAGER
	 7:   CLARK 의 직업은  MANAGER
	 8:   SCOTT 의 직업은  ANALYST
	 9:  KING 의 직업은  PRESIDENT
	10: TURNER 의 직업은  SALESMAN
	11:     ADAMS 의 직업은  CLERK
	12:     JAMES 의 직업은  CLERK
	13:    FORD 의 직업은  ANALYST
	14:    MILLER 의 직업은  CLERK
	15:      JACK 의 직업은  CLERK










■ 기타 비교 연산자
		SQL 		vs	 	R
	1. in				       %in%
	2. like				       grep
	3. is null			       is.na
	4. between .. and		emp$sal >= 1000 &
					emp$sal <= 3000




문제 7. 직업이 sALESMAN, ANALYST인 사원들의 이름과 직업을 출력하시오 !

	emp[emp$job %in% c("SALESMAN", "ANAYST"), c("ename", "sal") ]
	
	    ename  sal
	2   ALLEN 1600
	3    WARD 1250
	5  MARTIN 1250
	10 TURNER 1500




문제 8. 직업이 SALESMAN, ANAYST가 아닌 사원들의 이름과 직업을 출력하시오 !

	emp[!emp$job %in% c("SALESMAN", "ANAYST"), c("ename", "sal") ]
	
	    ename  sal
	1   SMITH  800
	4   JONES 2975
	6   BLAKE 2850
	7   CLARK 2450
	8   SCOTT 3000
	9    KING 5000
	11  ADAMS 1100
	12  JAMES  950
	13   FORD 3000
	14 MILLER 1300
	15   JACK 3200




문제 9. 커미션이 null인 사원들의 이름과 월급과 커미션을 출력하시오 !

	emp[is.na(emp$comm), c("ename", 'sal', "comm")]

	    ename  sal comm
	1   SMITH  800   NA
	4   JONES 2975   NA
	6   BLAKE 2850   NA
	7   CLARK 2450   NA
	8   SCOTT 3000   NA
	9    KING 5000   NA
	11  ADAMS 1100   NA
	12  JAMES  950   NA
	13   FORD 3000   NA
	14 MILLER 1300   NA
	15   JACK 3200   NA


	※ R에서의 null값 : 
						   검색하는 방법
		1. NULL ( 아무것도 없다 )   ──▶   is.null()
		2. NA   ( 결손 값 ) 	    ──▶   is.na()
			    ↓
			어느 부분이 없거나 잘못되서 불완전한 상태
		3. NaN  ( 비수치 )          ──▶   is.na()
		    ↓
		  Not a Number

	※ NULL ( 아무것도 없다 ) 를 활용하는 때는 반복문으로 처리할 오브젝트의 초기값을 NULL 설정

		# 예제 :
			x <- NULL
			for (i in 1:10) x <- append(x, i*i)
			x
			
			 [1]   1   4   9  16  25  36  49  64  81 100





문제 10. 커미션이 NA가 아닌 사원들의 이름과 월급과 커미션을 출력하시오 !

	emp[!is.na(emp$comm), c("ename", 'sal', "comm")]
	
	    ename  sal comm
	2   ALLEN 1600  300
	3    WARD 1250  500
	5  MARTIN 1250 1400
	10 TURNER 1500    0




문제 11. 이름의 첫번째 글자가 A로 시작하는 사원들의 이름과 월급을 출력하시오 !

	emp[grep('^A.*', emp$ename), c("ename", "sal")]
	
	   ename  sal
	2  ALLEN 1600
	11 ADAMS 1100

		※ 설명 :
			^ : 첫번째
			$ : 마지막
			. : 한자리수
			* : wild card(%)





문제 12. 이름의 끝글자가 T로 끝나는 시원들의 이름과 월급을 출력하시오 !

	emp[grep('*.T$', emp$ename), c("ename", "sal")]
	
	  ename  sal
	8 SCOTT 3000




문제 13. (점심시간 문제) 이름의 두번째 철자가 M인 사원들의 이름과 월급을 출력하시오 !

	emp[grep('^.M', emp$ename), c("ename", "sal")]

	  ename sal
	1 SMITH 800








★ 중복제거 작업

문제 14. 부서번호를 출력하는데 중복제거해서 출력하시오 !

unique(emp$deptno)
library(data.table)
data.table("부서번호"=unique(emp$deptno))








★ 정렬 작업

		SQL 		vs		R
	     order by			1. data frame에서 order옵션
					2. doBy 패키지를 설치하고
					   orderBy함수를 사용



문제 15. 이름과 월급을 출력하는데 월급이 높은 사원부터 출력하시오 !

	emp[order(emp$sal, decreasing=T), c("ename", "sal")]
###	↑
###	Data Frame : emp[행, 열]

	    ename  sal
	9    KING 5000
	15   JACK 3200
	8   SCOTT 3000
	13   FORD 3000
	4   JONES 2975
	6   BLAKE 2850
	7   CLARK 2450
	2   ALLEN 1600
	10 TURNER 1500
	14 MILLER 1300
	3    WARD 1250
	5  MARTIN 1250
	11  ADAMS 1100
	12  JAMES  950
	1   SMITH  800




문제 16. 이름과 입사일을 출력하는데 먼저 입사한 사원부터 출력하시오 !

	emp[order(emp$hiredate, decreasing=F), c("ename", "hiredate")]
	
	    ename   hiredate
	1   SMITH 1980-12-17
	2   ALLEN 1981-02-20
	3    WARD 1981-02-22
	4   JONES 1981-04-02
	6   BLAKE 1981-05-01
	7   CLARK 1981-06-09
	10 TURNER 1981-09-08
	5  MARTIN 1981-09-28
	9    KING 1981-11-17
	12  JAMES 1981-12-03
	13   FORD 1981-12-03
	14 MILLER 1982-01-23
	15   JACK 1982-01-23
	8   SCOTT 1987-04-19
	11  ADAMS 1987-05-23






문제 17. 직업이 SALESMAN인 사원들의 이름과 월급과 직업을 출력하는데 월급이 높은 사원부터 출력하시오 !

	dummy <- emp[emp$job=="SALESMAN", c("sal", "job")]
	dummy[order(dummy$sal, decreasing = T),]
	
	    sal      job
	2  1600 SALESMAN
	10 1500 SALESMAN
	3  1250 SALESMAN
	5  1250 SALESMAN






** dummy라는 변수를 지워버리고 싶으면 ?
rm(dummy)
ls()
** 모든 변수 삭제
rm(list=ls())






문제 18. 이름과 월급을 출력하는데 월급이 높은 사원순으로 출력하는 것을 doBy패키지를 이용해서 출력하시오 !

	install.packages("doBy")
	library(doBy)
	orderBy( ~-sal, emp[, c("ename", "sal")])

	    ename  sal
	9    KING 5000
	15   JACK 3200
	8   SCOTT 3000
	13   FORD 3000
	4   JONES 2975
	6   BLAKE 2850
	7   CLARK 2450
	2   ALLEN 1600
	10 TURNER 1500
	14 MILLER 1300
	3    WARD 1250
	5  MARTIN 1250
	11  ADAMS 1100
	12  JAMES  950
	1   SMITH  800





문제 19. 직업이 ANALYST가 아닌 사원들의 이름과 월급과 직업을 출력하는데 월급이 높은 사원부터 출력하시오 !

	library(doBy)
	orderBy( ~-sal, emp[emp$job != "ANALYST", c("ename", "sal", "job")])
	
	    ename  sal       job
	9    KING 5000 PRESIDENT
	15   JACK 3200     CLERK
	4   JONES 2975   MANAGER
	6   BLAKE 2850   MANAGER
	7   CLARK 2450   MANAGER
	2   ALLEN 1600  SALESMAN
	10 TURNER 1500  SALESMAN
	14 MILLER 1300     CLERK
	3    WARD 1250  SALESMAN
	5  MARTIN 1250  SALESMAN
	11  ADAMS 1100     CLERK
	12  JAMES  950     CLERK
	1   SMITH  800     CLERK




문제 20. 카페에서 crime_loc.csv를 내려받고 R에 로드한 후에 살인이 일어나는 장소와 건수를 출력하는데 
	 살인이 일어나는 건수가 높은것부터 출력하시오 !

	crime_loc <- read.csv("crime_loc.csv", header=T)
	crime_loc
	library(doBy)
	attach(crime_loc)
	orderBy( ~-건수, crime_loc[범죄=="살인", c("장소", "건수")])
	
	            장소 건수
	83            집  312
	85          노상  280
	82        아파트  242
	108         기타  131
	89          병원   87
	88      숙박업소   43
	90        사무실   40
	86          상점   23
	101     의료기관   19
	91          공장   15
	98        유원지   13
	96          교통    9
	94      역대합실    8
	99          학교    8
	103         산야    8
	87      시장노점    5
	92        공사장    4
	93          창고    4
	107         공지    3
	102     종교기관    2
	104         해상    2
	84      고속도로    1
	95        지하철    1
	97  유흥접객업소    1
	105         부대    1
	100     금융기관    0
	106     구금장소    0




문제 21. 범죄의 유형이 무엇이 있는지 중복제거해서 출력하시오 !

	library(data.table)
	data.table("범죄유형"=unique(crime_loc$범죄))
	
	                        범죄유형
	 1:                         절도
	 2:                         장물
	 3:                         손괴
	 4:                         살인
	 5:                         강도
	 6:                         방화
	 7:                         강간
	 8:                         폭행
	 9:                         상해
	10:                         협박
	11:                         공갈
	12:                   약취와유인
	13:                   체포와감금
	14: 폭력행위등처벌에관한법률위반
	15:                         간통
	16:                   도박과복표
	17:                   과실치사상
	18:             업무상과실치사상
	19:                         실화
	20:                     주거침입
	21:                         유기
	22:                 교통사고처리
	23:               도로교통법위반
	                        범죄유형




문제 22. 부서번호가 10번, 20번인 사원들의 이름과 월급과 부서번호를 출력하는데 월급이 높은 사원부터 출력하시오 !

	library(doBy)
	attach(emp)
	orderBy( ~-sal, emp[!emp$deptno==30, c("ename", "sal", "deptno")])
	
	    ename  sal deptno
	9    KING 5000     10
	15   JACK 3200     70
	8   SCOTT 3000     20
	13   FORD 3000     20
	4   JONES 2975     20
	7   CLARK 2450     10
	14 MILLER 1300     10
	11  ADAMS 1100     20
	1   SMITH  800     20








★ 함수
	1. 문자함수
	2. 숫자함수
	3. 날짜함수
	4. 변환함수
	5. 일반함수




★ 문자함수
		SQL		vs		R
	       upper			      toupper
	       lower			      tolower
	       substr			      substr
	       replace			      gsub




문제 23. 이름과 직업을 출력하는데 소문자로 출력하시오 !

	data.table("이름" = tolower(emp$ename), "직업" = tolower(emp$job))
	cbind(tolower(emp$ename), tolower(emp$job))
	
	      이름      직업
	 1:  smith     clerk
	 2:  allen  salesman
	 3:   ward  salesman
	 4:  jones   manager
	 5: martin  salesman
	 6:  blake   manager
	 7:  clark   manager
	 8:  scott   analyst
	 9:   king president
	10: turner  salesman
	11:  adams     clerk
	12:  james     clerk
	13:   ford   analyst
	14: miller     clerk
	15:   jack     clerk




문제 24. (R로 함수 생성) 아래와 같이 이름을 물어보게 하고 이름을 입력하면 해당 사원의 이름과 월급이 
	 출력되는 R코드를 작성하시오 !

	find_sal <- function() {
	  response <- readline(prompt="이름을 입력하세요 !")
	  x <- emp[emp$ename==response, c("ename", "sal")]
	  print(x)
	}
	find_sal()
	
	이름을 입력하세요 !SCOTT
	  ename  sal
	8 SCOTT 3000




문제 25. 위의 문제를 다시 해결하는데 이름을 소문자로 입력해도 출력되게 하시오 !

	find_sal <- function() {
	  response <- readline(prompt="이름을 입력하세요 !")
	  x <- emp[emp$ename == toupper(response), c("ename", "sal")]
	  print(x)
	}
	find_sal()
	scott
	
	이름을 입력하세요 !scott
	  ename  sal
	8 SCOTT 3000




문제 26. (substr) 이름의 두번째 철자가 m인 사원들의 이름과 월급을 출력하는데 substr함수를 사용해서 출력하시오 !

	emp[substr(emp$ename, 2, 2) == "M", c("ename", "sal")]
##	## 이름의 두번째 자리부터 두번째 자리까지
	
	  ename sal
	1 SMITH 800





문제 27. 이름을 출력하고 이름 옆에 이름의 첫번재 철자부터 세번째 철자까지 출력하시오 !

	data.table(이름=emp$ename, 이름=substr(emp$ename, 1, 3))
	
	      이름 이름
	 1:  SMITH  SMI
	 2:  ALLEN  ALL
	 3:   WARD  WAR
	 4:  JONES  JON
	 5: MARTIN  MAR
	 6:  BLAKE  BLA
	 7:  CLARK  CLA
	 8:  SCOTT  SCO
	 9:   KING  KIN
	10: TURNER  TUR
	11:  ADAMS  ADA
	12:  JAMES  JAM
	13:   FORD  FOR
	14: MILLER  MIL
	15:   JACK  JAC










■ gsub 설명 ─▶ gsub('h', 'H', text)
			특정 text에서 소문자 h를 대문자 H로 변경해라~



문제 28. 이름과 월급을 출력하는데 월급을 출력할 때 숫자 0을 * 로 출력하시오 !

	data.table(이름=emp$ename, 월급=gsub(0, '*', emp$sal))
	
	      이름 월급
	 1:  SMITH  8**
	 2:  ALLEN 16**
	 3:   WARD 125*
	 4:  JONES 2975
	 5: MARTIN 125*
	 6:  BLAKE 285*
	 7:  CLARK 245*
	 8:  SCOTT 3***
	 9:   KING 5***
	10: TURNER 15**
	11:  ADAMS 11**
	12:  JAMES  95*
	13:   FORD 3***
	14: MILLER 13**
	15:   JACK 32**


문제 29. 이름과 월급을 출력하는데 월급을 출력할 때에 숫자 0, 1, 2를 *로 출력하시오 !

	data.table(이름=emp$ename, 월급=gsub('[0-2]', '*', emp$sal))
	
	      이름 월급
	 1:  SMITH  8**
	 2:  ALLEN *6**
	 3:   WARD **5*
	 4:  JONES *975
	 5: MARTIN **5*
	 6:  BLAKE *85*
	 7:  CLARK *45*
	 8:  SCOTT 3***
	 9:   KING 5***
	10: TURNER *5**
	11:  ADAMS ****
	12:  JAMES  95*
	13:   FORD 3***
	14: MILLER *3**
	15:   JACK 3***




문제 30. 6의 9승을 출력하시오 !

	6^9
	
	[1] 10077696





문제 31. 10을 3으로 나눈 나머지값이 무엇인가?

	10%%3
	
	[1] 1






문제 32. 이름과 연봉을 출력하는데 연봉은 월급에 12를 곱해서 출력하고 컬럼명을 한글로 연봉으로 출력되게 
	 하시오 !

	data.table(이름=emp$ename, 연봉=emp$sal*12)
	
	      이름  연봉
	 1:  SMITH  9600
	 2:  ALLEN 19200
	 3:   WARD 15000
	 4:  JONES 35700
	 5: MARTIN 15000
	 6:  BLAKE 34200
	 7:  CLARK 29400
	 8:  SCOTT 36000
	 9:   KING 60000
	10: TURNER 18000
	11:  ADAMS 13200
	12:  JAMES 11400
	13:   FORD 36000
	14: MILLER 15600
	15:   JACK 38400




문제 33. 이름과 연봉을 출력하는데 연봉이 높은것부터 출력하시오 !

	orderBy( ~-연봉, data.table(이름=emp$ename, 연봉=emp$sal*12))
	
	      이름  연봉
	 1:   KING 60000
	 2:   JACK 38400
	 3:  SCOTT 36000
	 4:   FORD 36000
	 5:  JONES 35700
	 6:  BLAKE 34200
	 7:  CLARK 29400
	 8:  ALLEN 19200
	 9: TURNER 18000
	10: MILLER 15600
	11:   WARD 15000
	12: MARTIN 15000
	13:  ADAMS 13200
	14:  JAMES 11400
	15:  SMITH  9600




문제 34. 위의 결과를 다시 출력하는데 round함수를 이용해서 아래와 같이 100단위에서 반올림되게 하시오 !

	orderBy( ~-연봉, data.table(이름=emp$ename, 연봉=round(emp$sal*12, digits=-3)))
	
	      이름  연봉
	 1:   KING 60000
	 2:   JACK 38000
	 3:  JONES 36000
	 4:  SCOTT 36000
	 5:   FORD 36000
	 6:  BLAKE 34000
	 7:  CLARK 29000
	 8:  ALLEN 19000
	 9: TURNER 18000
	10: MILLER 16000
	11:   WARD 15000
	12: MARTIN 15000
	13:  ADAMS 13000
	14:  JAMES 11000
	15:  SMITH 10000

		※ R의 round의 특징
			122 ───────123
				122.5
			round(122.5)  ──▶ 122선택

			123 ───────124
				123.5
			round(123.5)  ──▶ 124선택

				"R은 짝수를 좋아한다."





문제 35. 문제 34번 결과를 다시 출력하는데 100자리 이후를 다 버려서 출력하시오 !

	orderBy( ~-연봉, data.table(이름=emp$ename, 연봉=trunc(emp$sal*12, -3)))

	※ 설명 R에서 trunc는 소수점에서만 가능하다.









■ 날짜함수

		SQL		vs		R
	      sysdate			    Sys.Date()
	      add_months		    difftime
	      months_between		    사용자 정의 함수
	      last_day			    사용자 정의 함수
	      next_day			    사용자 정의 함수



문제 36. 오늘 날짜를 출력하시오 !

	Sys.Date()
		
	[1] "2019-02-14"





문제 37. 이름, 입사한 날짜부터 오늘까지 총 몇일 근무했는지 출력하시오 !

	data.table(emp$ename, Sys.Date() - as.Date(emp$hiredate))

	        V1         V2
	 1:  SMITH 13938 days
	 2:  ALLEN 13873 days
	 3:   WARD 13871 days
	 4:  JONES 13832 days
	 5: MARTIN 13653 days
	 6:  BLAKE 13803 days
	 7:  CLARK 13764 days
	 8:  SCOTT 11624 days
	 9:   KING 13603 days
	10: TURNER 13673 days
	11:  ADAMS 11590 days
	12:  JAMES 13587 days
	13:   FORD 13587 days
	14: MILLER 13536 days
	15:   JACK 13536 days

		**날짜 - 날짜

		오라클 		vs 		R
		to_date 			as.Date





문제 38. 오늘날짜의 달에 마지막 날짜를 출력하시오 !

	SQL> select last_day(sysdate) from dual;
	
	install.packages("lubridate")
	library(lubridate)
	last_day <- function(x) {
	  ceiling_date(x, "month") - days(1)
	}
	last_day(Sys.Date())
	#ceiling_date(Sys.Date(), "month")

	[1] "2019-02-28"




문제 39. (오늘의 마지막 문제) last_day 함수 처럼 first_day함수도 생성하시오 !

	first_day <- function(x) {
	  floor_date(x, "month")
	}
	first_day(Sys.Date())
	[1] "2019-02-01"